{"version":3,"sources":["components/Modules/style.js","components/Modules/index.js","actions/types.js","actions/auth.js","components/LogIn/index.js","components/Navbar/style.js","components/Navbar/index.js","components/Home/style.js","components/Home/index.js","components/Index/index.js","components/ResetPassword/index.js","components/ResetPasswordConfirm/index.js","reducers/auth.js","reducers/index.js","store.js","hocs/Layout.js","components/Signup/index.js","components/Activate/index.js","components/ImageUpload/index.js","components/Logout/index.js","App.js","index.js"],"names":["ModuleSection","styled","div","ModulePart","props","first","ModuleTitle","h2","Span","ModuleDesc","p","ModuleButton","Link","Modules","state","modules","axios","get","then","res","setState","data","isAuthenticated","this","modulesList","undefined","map","moduleItem","id","title","description","to","className","Component","connect","auth","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","process","type","payload","logout","isLogin","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","useEffect","alert","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","NavbarSection","Logo","LogoText","span","ListItem","ul","li","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","HomeSection","HomeInformation","HomeTitle","HomeDesc","HomeBtn","Index","isEmailActivated","reset_password","reset_password_confirm","uid","token","new_password","re_new_password","match","requestSent","setRequestSent","params","initialState","access","refresh","user","isSignup","isEmailSignup","isLogout","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","checkAuthenticated","code","children","signup","re_password","verify","verified","setVerified","style","marginTop","ImageUpload","onImageChange","event","files","img","image","URL","createObjectURL","bind","src","for","App","exact","path","component","LogIn","Signup","ResetPassword","ResetPasswordConfirm","Activate","Logout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6374f0e3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {Link} from 'react-router-dom' ;\r\n\r\n export const ModuleSection = styled.div `\r\n    height: 30%;\r\n    padding: 50px 0;\r\n    overflow: hidden;\r\n    background: #fff;\r\n    `\r\n    export const ModulePart = styled.div `\r\n    margin-top: 20px;\r\n    width: 22%;\r\n    float: left;\r\n    height: 300px;\r\n    background: #cee9f0;\r\n    // padding: 30px 0;\r\n    border: 1px solid #888;\r\n    border-radius: 25px;\r\n    box-sizing: border-box;\r\n    text-align: center;\r\n    margin-left: ${props => props.first === 1 ? '1%' : '16%'} ;\r\n    `\r\n\r\nexport const ModuleTitle = styled.h2 `\r\n    font-size: 43px; \r\n    font-weight: normal;\r\n    padding-top: ${props => props.first === 1 ? '0%' : '10%'} ;\r\n    `\r\n    export const Span = styled.h2 `\r\n    font-size: 40px; \r\n    font-weight: bold;\r\n    margin-left: 30px;\r\n    margin-top: 0px;\r\n    `\r\n    export const ModuleDesc = styled.p `\r\n    font-size: 17px;\r\n    color: #000;\r\n    padding: 20px;\r\n    padding: ${props => props.first === 2 ? '22px' : '12px'} ;\r\n    margin-top : 0;\r\n    `\r\n\r\n\r\nexport const  ModuleButton = styled(Link) `\r\n    background: #d65858;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    width: 150px;\r\n    border: 0;\r\n    padding: 15px;\r\n    margin-top: 20px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    &:hover {\r\n        background: #fff;\r\n    color: #eb5424\r\n    }\r\n    `\r\n\r\n\r\n","import React, { Component }  from 'react' ;\r\nimport axios from 'axios'\r\n\r\nimport {ModuleTitle , ModuleSection , ModuleButton , ModuleDesc ,  Span , ModulePart}  from './style.js' ;\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Modules extends Component {  \r\n  state = {\r\n    modules : [] ,\r\n  } \r\n\r\n componentDidMount()  {\r\n    axios.get('static/js/data.json').then(res => {this.setState({ modules: res.data.modules}) }  )\r\n  }\r\n  render() {\r\n    const {isAuthenticated} = this.props ;\r\n\r\n    const {modules} = this.state ;\r\n    const modulesList = modules && modules !== null && modules !== undefined && modules.map( (moduleItem) => {\r\n      return(\r\n        <ModulePart first={moduleItem.id} key = {moduleItem.id}>\r\n              <ModuleTitle first={moduleItem.id}>{moduleItem.title}</ModuleTitle>\r\n              <ModuleDesc first={moduleItem.id}>{moduleItem.description}</ModuleDesc>\r\n              {isAuthenticated ? <ModuleButton to= '/image-upload'>Start</ModuleButton> : '' }\r\n          </ModulePart>\r\n      )\r\n\r\n    })\r\n    return (\r\n      <ModuleSection>\r\n      <div className=\"page_conatiner\">\r\n          <Span>Modules</Span>\r\n          {modulesList}\r\n      </div>\r\n  </ModuleSection>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n  \r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(mapStateToProps , null) (Modules);","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS ';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\n// export const signup = (name, email, password, re_password) => async dispatch => {\r\n//     const config = {\r\n//         headers: {\r\n//             'Content-Type': 'application/json'\r\n//         }\r\n//     };\r\n\r\n//     const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n\r\n\r\n//     // try {\r\n//     //     const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n//     //     dispatch({\r\n//     //         type: SIGNUP_SUCCESS,\r\n//     //         payload: res.data\r\n//     //     });\r\n//     //     alert('Your account has been done , Go to your email to verify it');\r\n//     //     if (password === re_password) {\r\n//     //         return <Redirect to='/login' />\r\n//     //     }\r\n//     //     else {\r\n//     //         if (password != re_password) {\r\n//     //             alert('The two password fields did not match');\r\n//     //         }\r\n//     //     }\r\n\r\n//     // } catch (err) {\r\n//     //     dispatch({\r\n//     //         type: SIGNUP_FAIL,\r\n//     //     });\r\n//     //     alert('This email already exists');\r\n//     // }\r\n\r\n//     try {\r\n//         const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n//          if(res.status === 201){\r\n//             dispatch({\r\n//                 type: SIGNUP_SUCCESS,\r\n//                 payload: res.data\r\n//             });\r\n//             // alert('Your account has been done , Go to your email to verify it');\r\n//         }\r\n//         // else{\r\n//         //         dispatch({\r\n//         //             type: SIGNUP_FAIL,\r\n//         //         });\r\n//         //         // alert('This email already exists');\r\n//         // }\r\n//     } catch (err) {\r\n//         dispatch({\r\n//             type: SIGNUP_FAIL,\r\n//         });\r\n//         // alert('This email already exists');\r\n//     }\r\n// };\r\n\r\nexport const signup = (name,  email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name,  email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n        \r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL,\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","// import React , { Component} from 'react' ;\r\n\r\n// import './style.css'\r\n\r\nimport React, { useState , useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst LogIn = ({ login , isAuthenticated , isLogin}) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '' \r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isLogin === null) {\r\n                return ;\r\n            }\r\n            if(isLogin){\r\n                return ;\r\n            }\r\n            else{\r\n                alert('E-mail and password did not match .. note: if your email is not activated yet , go to your email to verify it first');\r\n            }\r\n        }\r\n        , [isLogin] \r\n      )\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (email !== 'undefined' && password !== 'undefined') {\r\n            login(email, password);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   isAuthenticated: state.auth.isAuthenticated,\r\n   isLogin: state.auth.isLogin\r\n});\r\n\r\nexport default connect(mapStateToProps , { login})(LogIn);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t","import styled from \"styled-components\";\r\nimport {Link} from 'react-router-dom' ;\r\n\r\nexport const NavbarSection = styled.div `\r\nborder-bottom: 1px solid #000\r\n`\r\nexport const Logo = styled.div `\r\nwidth: 50%;\r\nfloat: left;\r\nclear :both;\r\nmargin-left: 15px;\r\n`\r\nexport const LogoText = styled.h2 `\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n `\r\n export const Span = styled.span `\r\n color : #ff9933;\r\n `\r\nexport const UlList = styled.ul`\r\n   \r\n \r\n    \r\n`\r\nexport const ListItem = styled.li `\r\nmargin-right: 15px;\r\n    \r\n`\r\nexport const Anchor = styled.a `\r\n    display: block;\r\n    color: #222;\r\n    text-decoration: none;\r\n    padding: 10px 15px;\r\n    font-weight: bold;\r\n    &:hover {\r\n        color: #eb5424;\r\n    }\r\n`\r\nexport const StyledLink = styled(Link)`\r\ndisplay: block;\r\ncolor: #222;\r\ntext-decoration: none !important;\r\npadding: 10px 10px;\r\nfont-weight: bold;\r\n&:hover {\r\n    color: #eb5424;\r\n}\r\n`","import React , {Fragment}  from 'react' ;\r\nimport {NavbarSection , Logo , LogoText , ListItem , UlList , Span ,StyledLink} from './style.js';\r\nimport {connect} from 'react-redux' ;\r\nimport { logout } from '../../actions/auth' ;\r\nimport {Link} from 'react-router-dom' ;\r\n\r\nconst Navbar = ({logout , isAuthenticated}) =>  {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <ListItem>\r\n        <li className='nav-item active '>\r\n            <Link className='nav-link' to='/login'>Login <span className='sr-only'>(current)</span></Link>\r\n        </li>\r\n        </ListItem>\r\n        <ListItem>\r\n        <li className='nav-item active'>\r\n            <Link className='nav-link' to='/signup'>Sign Up<span className='sr-only'>(current)</span></Link>\r\n        </li>\r\n        </ListItem>\r\n    </Fragment>\r\n       \r\n    );\r\n\r\n    const authLinks = () => (\r\n        <ListItem>\r\n        <li className='nav-item active'>\r\n        <Link className='nav-link' to='#!' onClick={logout}>Logout<span className='sr-only'>(current)</span></Link>\r\n    </li>  \r\n    </ListItem>\r\n    );\r\n  \r\n   \r\nreturn(\r\n// {/* <Fragment> */}\r\n    <NavbarSection>\r\n         <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n            \r\n               <Logo><Link className='navbar-brand'to='/'> <LogoText> Image<Span>Pro</Span> </LogoText> </Link>   </Logo> \r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-toggle='collapse' \r\n                    data-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse ' id='navbarResponsive'>\r\n                    \r\n                    <ul className='navbar-nav ml-auto'>\r\n                      <ListItem>  <li className='nav-item active'>\r\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\r\n                        </li>\r\n                        </ListItem>\r\n                       <ListItem> <li className='nav-item active'>\r\n                            <Link className='nav-link' to='/modules'>Modules <span className='sr-only'>(current)</span></Link>\r\n                        </li>\r\n                        </ListItem>\r\n                        {isAuthenticated ? authLinks() : guestLinks()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            </NavbarSection>\r\n            // {/* // </Fragment> */}\r\n           \r\n\r\n);\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps , {logout}) (Navbar);","import styled from \"styled-components\";\r\nimport {Link} from 'react-router-dom' ;\r\n\r\nexport const HomeSection = styled.div `\r\n    height: 500px;\r\n    background: url('/static/images/home-bg.jpg'); \r\n    background-size: cover;\r\n    background-position: center;\r\n    text-align: center;\r\n    position: relative;\r\n`\r\nexport const HomeInformation = styled.div ` \r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%,-50%);\r\n    `\r\nexport const HomeTitle = styled.h2 `\r\n    font-size: 60px;\r\n    font-weight: bold;\r\n    color: #5e5e5e;\r\n    margin-bottom: 20px;\r\n    `\r\nexport const HomeDesc = styled.p `\r\n    font-size: 25px;\r\n    line-height: 1.5;\r\n    color: #000;\r\n    margin-bottom: 40px;\r\n    `\r\nexport const Span = styled.span `\r\n    color: #000;\r\n    font-weight: bold;\r\n    `\r\nexport const HomeBtn = styled(Link) `\r\n    background: #eb5424;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    width: 150px;\r\n    text-decoration: none !important;\r\n    border: 0;\r\n    padding: 15px;\r\n    cursor: pointer;\r\n    font-weight: normal;\r\n    &:hover {\r\n    // background: #fff;\r\n    font-weight: bold;\r\n    color: #000;\r\n    }\r\n    `\r\n\r\n","import React  from 'react' ;\r\nimport {BrowserRouter , Route} from 'react-router-dom' ;\r\nimport Navbar from '../Navbar';\r\nimport LogIn from './../LogIn' ;\r\nimport {connect} from 'react-redux' ;\r\n\r\nimport {HomeSection , HomeBtn , HomeDesc , HomeInformation , HomeTitle , Span} from './style.js' ;\r\n\r\nconst Home = ({isAuthenticated}) =>  {\r\n    // const logIn = () => {\r\n    //     <BrowserRouter>\r\n    //     <Navbar/>\r\n    //     <Route path=\"/login\" component={LogIn} />\r\n    //     </BrowserRouter>\r\n\r\n    // }\r\n    return (\r\n      <HomeSection>\r\n      <div className=\"page_conatiner\">\r\n          <HomeInformation>\r\n              <HomeTitle>Image Processing</HomeTitle>\r\n              <HomeDesc>\r\n                  <Span>ImagePro</Span> is a website for process Images with many modules\r\n              </HomeDesc>\r\n              {/* <HomeBtn to=\"/login\">Let's Begin</HomeBtn> */}\r\n              {isAuthenticated ? '' : <HomeBtn to=\"/login\">Try it</HomeBtn>}\r\n          </HomeInformation>\r\n      </div>\r\n  </HomeSection>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps , null) (Home);","import React , {Component} from 'react' ;\r\nimport Home from './../Home'\r\nimport Modules from './../Modules'\r\n\r\n\r\n\r\nclass Index extends Component{\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Home/>\r\n        <Modules/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;","import React, { useState , useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../../actions/auth';\r\n\r\nconst ResetPassword = ({ reset_password , isEmailActivated }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isEmailActivated === null) {\r\n                return ;\r\n            }\r\n            if(isEmailActivated){\r\n                alert('Request sent to your e-mail');\r\n            }\r\n            else{\r\n                alert('Please make sure you have entered the correct e-mail .. note: if your email is not activated yet , go to your email to verify it first');\r\n            }\r\n        }\r\n        , [isEmailActivated] \r\n      )\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (email !== 'undefined') {\r\n            reset_password(email);\r\n        }\r\n       // setRequestSent(true);\r\n    };\r\n\r\n    // if (requestSent) {\r\n    //     return <Redirect to='/' />\r\n    // }\r\n\r\n    if (isEmailActivated){\r\n        return <Redirect to = '/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isEmailActivated: state.auth.isEmailActivated\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect, Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../../actions/auth';\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n       \r\n        \r\n            if (new_password !== 'undefined' && re_new_password !== 'undefined') {\r\n                if (new_password == re_new_password) {\r\n                    reset_password_confirm(uid, token, new_password, re_new_password);\r\n                    setRequestSent(true);\r\n                }\r\n                else {\r\n                    if (new_password != re_new_password) {\r\n                        alert('Those paswords dont match');\r\n                        \r\n                    }\r\n                }\r\n    \r\n            }\r\n        \r\n    };\r\n\r\n    if (requestSent) {\r\n        alert('Password has been successfully changed');\r\n        \r\n        return <Redirect to='/' /> \r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (connect(null, { reset_password_confirm })(ResetPasswordConfirm));","import { Redirect } from 'react-router';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null,\r\n    isSignup: null,\r\n    isEmailSignup: null,\r\n    isEmailActivated: null,\r\n    isLogin: null,\r\n    isLogout: null\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            localStorage.setItem('refresh', payload.refresh);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh,\r\n                isLogin: true\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                isEmailSignup: true,\r\n                isSignup: true\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                isLogin: false\r\n            }\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                isLogout: true\r\n            }\r\n        case SIGNUP_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                isSignup: false,\r\n                isEmailSignup: false\r\n            }\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isEmailActivated: true\r\n            }\r\n        case PASSWORD_RESET_FAIL:\r\n            return {\r\n                ...state,\r\n                isEmailActivated: false\r\n            }\r\n        case ACTIVATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                // isEmailActivated: true\r\n            }\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state,\r\n                // isEmailActivated: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React , {useEffect}   from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport {connect} from \"react-redux\" ;\r\nimport {checkAuthenticated , load_user , logout} from '../actions/auth' ;\r\n\r\nconst Layout = ({ checkAuthenticated, load_user, logout ,  children }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n        logout();\r\n    }, []) ;\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null , {checkAuthenticated , load_user , logout}) (Layout);","import React, { useState , useEffect } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../../actions/auth';\r\n\r\n\r\nconst Signup = ({ signup, isAuthenticated, isEmailSignup , isSignup }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isEmailSignup === null) {\r\n                return ;\r\n            }\r\n            if(isEmailSignup){\r\n                alert('Your account has successfully done , Go to your email to verify it');\r\n            }\r\n            else{\r\n                alert('This email already exists');\r\n            }\r\n        }\r\n        , [isEmailSignup] \r\n      )\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password !== 'undefined' && re_password !== 'undefined') {\r\n            if (password == re_password) {\r\n                signup(name, email, password, re_password);\r\n            }\r\n            else {\r\n                if (password !== re_password) {\r\n                    alert('The two password fields did not match');\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    // if (isAuthenticated) {\r\n    //     return <Redirect to='/' />\r\n    // }\r\n    if(isSignup) {\r\n        return <Redirect to = '/login' /> ;\r\n    }\r\n\r\n    // if (accountCreated) {\r\n    //      setAccountCreated(false);\r\n    //      return <Redirect to='/login' /> ;\r\n    // }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                {/* <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='First Name*'\r\n                        name='first_name'\r\n                        value={first_name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div> */}\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isEmailSignup: state.auth.isEmailSignup ,\r\n    isSignup: state.auth.isSignup \r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../../actions/auth';\r\n\r\nconst Activate = ({ verify, match }) => {\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account:</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { Component } from 'react';\r\n\r\nimport './style.css'\r\n\r\nclass ImageUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: null\r\n    };\r\n\r\n    this.onImageChange = this.onImageChange.bind(this);\r\n  }\r\n\r\n  onImageChange = event => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let img = event.target.files[0];\r\n      this.setState({\r\n        image: URL.createObjectURL(img)\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <img id='image' src={this.state.image} />\r\n            <label for=\"fileUpload\" className=\"label\">Upload Image</label>\r\n            <input type=\"file\" className='input' id=\"fileUpload\" name=\"myImage\" onChange={this.onImageChange} ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ImageUpload;\r\n","import React, { useEffect } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\n\r\n\r\nconst Logout = ({ isLogout, logout, isAuthenticated }) => {\r\n\r\n    useEffect(\r\n        () => {\r\n            if(isLogout === null) {\r\n                return ;\r\n            }\r\n            if(isLogout){\r\n                return <Redirect to='/' /> ;\r\n            }\r\n        }\r\n        , [isLogout] \r\n      )\r\n\r\n   \r\n\r\n    if (isLogout) {\r\n        <Route exact path=\"/\" ></Route>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLogout: state.auth.isLogout,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Logout);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {BrowserRouter as Router , Route , Switch} from 'react-router-dom';\r\n\r\n\r\nimport Modules from './components/Modules';\r\nimport LogIn from './components/LogIn';\r\nimport Index from './components/Index';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport ResetPasswordConfirm from './components/ResetPasswordConfirm';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Layout from './hocs/Layout';\r\nimport Signup from './components/Signup';\r\nimport Activate from './components/Activate';\r\nimport ImageUpload from './components/ImageUpload' ;\r\nimport Logout from './components/Logout' ;\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <Router>\r\n    <Layout />\r\n    <Switch>\r\n    <Route exact path=\"/\" component={Index} />\r\n    <Route exact path=\"/login\" component={LogIn} />\r\n    <Route exact path='/signup' component={Signup} />\r\n    <Route exact path=\"/modules\" component={Modules} />\r\n    <Route exact path=\"/signup\" component={Signup} />\r\n    <Route exact path='/reset-password' component={ResetPassword} />\r\n    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n    <Route exact path='/activate/:uid/:token' component={Activate} />\r\n    <Route exact path=\"/image-upload\" component={ImageUpload} />\r\n    <Route exact path=\"/\" component={Logout} />\r\n\r\n\r\n    </Switch>\r\n\r\n  </Router>\r\n  </Provider>\r\n);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}